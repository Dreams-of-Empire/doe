add_namespace = decisions

# Recruit general for civil war event
country_event = {
	id = decisions.1
	title = decisions.1.t
	desc = decisions.1.desc
	picture = GFX_report_event_hitler_handshake

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			if = {
				limit = {
					any_army_leader = {
						average_stats < 2
						is_field_marshal = no
						NOT = { has_unit_leader_flag = hidden_sympathies }
						NOT = { has_trait = hidden_sympathies }
					}
				}
				random_army_leader = {
					limit = {
						average_stats < 2
						is_field_marshal = no
						NOT = { has_unit_leader_flag = hidden_sympathies }
						NOT = { has_trait = hidden_sympathies }
					}
					set_unit_leader_flag = hidden_sympathies
				}	
			}
			if = {
				limit = {
					any_army_leader = {
						NOT = { average_stats < 2 }
						average_stats < 3
						is_field_marshal = no
						NOT = { has_unit_leader_flag = hidden_sympathies }
						NOT = { has_trait = hidden_sympathies }
					}
				}
				random_army_leader = {
					limit = {
						NOT = { average_stats < 2 }
						average_stats < 3
						is_field_marshal = no
						NOT = { has_unit_leader_flag = hidden_sympathies }
						NOT = { has_trait = hidden_sympathies }
					}
					set_unit_leader_flag = hidden_sympathies
				}	
			}
			if = {
				limit = {
					any_army_leader = {
						NOT = { average_stats < 3 }
						average_stats < 4
						is_field_marshal = no
						NOT = { has_unit_leader_flag = hidden_sympathies }
						NOT = { has_trait = hidden_sympathies }
					}
				}
				random_army_leader = {
					limit = {
						NOT = { average_stats < 3 }
						average_stats < 4
						is_field_marshal = no
						NOT = { has_unit_leader_flag = hidden_sympathies }
						NOT = { has_trait = hidden_sympathies }
					}
					set_unit_leader_flag = hidden_sympathies
				}	
			}
			if = {
				limit = {
					any_army_leader = {
						NOT = { average_stats < 4 }
						NOT = { has_unit_leader_flag = hidden_sympathies }
						is_field_marshal = no
						NOT = { has_unit_leader_flag = hidden_sympathies }
						NOT = { has_trait = hidden_sympathies }
					}
				}
				random_army_leader = {
					limit = {
						NOT = { average_stats < 4 }
						is_field_marshal = no
						NOT = { has_unit_leader_flag = hidden_sympathies }
						NOT = { has_trait = hidden_sympathies }
					}
					set_unit_leader_flag = hidden_sympathies
				}	
			}
		}
	}
	
	# Recruit weak leader
	option = {
		name = decisions.1.a
		trigger = {
			any_army_leader = {
				is_field_marshal = no
				average_stats < 2
				has_unit_leader_flag = hidden_sympathies
			}
		}
		add_command_power = -1
		random_army_leader = {
			limit = {
				is_field_marshal = no
				average_stats < 2
				has_unit_leader_flag = hidden_sympathies
			}
			add_unit_leader_trait = hidden_sympathies
		}
		hidden_effect = {
			every_army_leader = {
				limit = {
					has_unit_leader_flag = hidden_sympathies
				}
				clr_unit_leader_flag = hidden_sympathies
			}
		}
	}

	# Recruit below mediocre leader
	option = {
		name = decisions.1.b
		trigger = {
			any_army_leader = {
				is_field_marshal = no
				NOT = { average_stats < 2 }
				average_stats < 3
				has_unit_leader_flag = hidden_sympathies
			}
		}
		add_command_power = -2
		add_political_power = -10
		random_army_leader = {
			limit = {
				is_field_marshal = no
				NOT = { average_stats < 2 }
				average_stats < 3
				has_unit_leader_flag = hidden_sympathies
			}
			add_unit_leader_trait = hidden_sympathies
		}
		hidden_effect = {
			every_army_leader = {
				limit = {
					has_unit_leader_flag = hidden_sympathies
				}
				clr_unit_leader_flag = hidden_sympathies
			}
		}
	}

	# Recruit above mediocre leader
	option = {
		name = decisions.1.c
		trigger = {
			any_army_leader = {
				is_field_marshal = no
				NOT = { average_stats < 3 }
				average_stats < 4
				has_unit_leader_flag = hidden_sympathies
			}
		}
		add_command_power = -3
		add_political_power = -20
		random_army_leader = {
			limit = {
				is_field_marshal = no
				NOT = { average_stats < 3 }
				average_stats < 4
				has_unit_leader_flag = hidden_sympathies
			}
			add_unit_leader_trait = hidden_sympathies
		}
		hidden_effect = {
			every_army_leader = {
				limit = {
					has_unit_leader_flag = hidden_sympathies
				}
				clr_unit_leader_flag = hidden_sympathies
			}
		}
	}

	# Recruit great leader
	option = {
		name = decisions.1.d
		trigger = {
			any_army_leader = {
				is_field_marshal = no
				NOT = { average_stats < 4 }
				has_unit_leader_flag = hidden_sympathies
			}
		}
		add_command_power = -4
		add_political_power = -30
		random_army_leader = {
			limit = {
				is_field_marshal = no
				NOT = { average_stats < 4 }
				has_unit_leader_flag = hidden_sympathies
			}
			add_unit_leader_trait = hidden_sympathies
		}
		hidden_effect = {
			every_army_leader = {
				limit = {
					has_unit_leader_flag = hidden_sympathies
				}
				clr_unit_leader_flag = hidden_sympathies
			}
		}
	}
}

# Recruit field marshal for civil war event
country_event = {
	id = decisions.2
	title = decisions.2.t
	desc = decisions.2.desc
	picture = GFX_report_event_hitler_handshake

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			if = {
				limit = {
					any_army_leader = {
						average_stats < 2
						is_field_marshal = yes
						NOT = { has_unit_leader_flag = hidden_sympathies_marshal }
						NOT = { has_trait = hidden_sympathies }
					}
				}
				random_army_leader = {
					limit = {
						average_stats < 2
						is_field_marshal = yes
						NOT = { has_unit_leader_flag = hidden_sympathies_marshal }
						NOT = { has_trait = hidden_sympathies }
					}
					set_unit_leader_flag = hidden_sympathies_marshal
				}	
			}
			if = {
				limit = {
					any_army_leader = {
						NOT = { average_stats < 2 }
						average_stats < 3
						is_field_marshal = yes
						NOT = { has_unit_leader_flag = hidden_sympathies_marshal }
						NOT = { has_trait = hidden_sympathies }
					}
				}
				random_army_leader = {
					limit = {
						NOT = { average_stats < 2 }
						average_stats < 3
						is_field_marshal = yes
						NOT = { has_unit_leader_flag = hidden_sympathies_marshal }
						NOT = { has_trait = hidden_sympathies }
					}
					set_unit_leader_flag = hidden_sympathies_marshal
				}	
			}
			if = {
				limit = {
					any_army_leader = {
						NOT = { average_stats < 3 }
						average_stats < 4
						is_field_marshal = yes
						NOT = { has_unit_leader_flag = hidden_sympathies_marshal }
						NOT = { has_trait = hidden_sympathies }
					}
				}
				random_army_leader = {
					limit = {
						NOT = { average_stats < 3 }
						average_stats < 4
						is_field_marshal = yes
						NOT = { has_unit_leader_flag = hidden_sympathies_marshal }
						NOT = { has_trait = hidden_sympathies }
					}
					set_unit_leader_flag = hidden_sympathies_marshal
				}	
			}
			if = {
				limit = {
					any_army_leader = {
						NOT = { average_stats < 4 }
						is_field_marshal = yes
						NOT = { has_unit_leader_flag = hidden_sympathies_marshal }
						NOT = { has_trait = hidden_sympathies }
					}
				}
				random_army_leader = {
					limit = {
						NOT = { average_stats < 4 }
						is_field_marshal = yes
						NOT = { has_unit_leader_flag = hidden_sympathies_marshal }
						NOT = { has_trait = hidden_sympathies }
					}
					set_unit_leader_flag = hidden_sympathies_marshal
				}	
			}
		}
	}
	
	# Recruit weak leader
	option = {
		name = decisions.1.a
		trigger = {
			any_army_leader = {
				is_field_marshal = yes
				average_stats < 2
				has_unit_leader_flag = hidden_sympathies_marshal
			}
		}
		add_command_power = -1
		random_army_leader = {
			limit = {
				is_field_marshal = yes
				average_stats < 2
				has_unit_leader_flag = hidden_sympathies_marshal
			}
			add_unit_leader_trait = hidden_sympathies
		}
		hidden_effect = {
			every_army_leader = {
				limit = {
					has_unit_leader_flag = hidden_sympathies_marshal
				}
				clr_unit_leader_flag = hidden_sympathies_marshal
			}
		}
	}

	# Recruit below mediocre leader
	option = {
		name = decisions.1.b
		trigger = {
			any_army_leader = {
				is_field_marshal = yes
				NOT = { average_stats < 2 }
				average_stats < 3
				has_unit_leader_flag = hidden_sympathies_marshal
			}
		}
		add_command_power = -2
		add_political_power = -10
		random_army_leader = {
			limit = {
				is_field_marshal = yes
				NOT = { average_stats < 2 }
				average_stats < 3
				has_unit_leader_flag = hidden_sympathies_marshal
			}
			add_unit_leader_trait = hidden_sympathies
		}
		hidden_effect = {
			every_army_leader = {
				limit = {
					has_unit_leader_flag = hidden_sympathies_marshal
				}
				clr_unit_leader_flag = hidden_sympathies_marshal
			}
		}
	}

	# Recruit above mediocre leader
	option = {
		name = decisions.1.c
		trigger = {
			any_army_leader = {
				is_field_marshal = yes
				NOT = { average_stats < 3 }
				average_stats < 4
				has_unit_leader_flag = hidden_sympathies_marshal
			}
		}
		add_command_power = -3
		add_political_power = -20
		random_army_leader = {
			limit = {
				is_field_marshal = yes
				NOT = { average_stats < 3 }
				average_stats < 4
				has_unit_leader_flag = hidden_sympathies_marshal
			}
			add_unit_leader_trait = hidden_sympathies
		}
		hidden_effect = {
			every_army_leader = {
				limit = {
					has_unit_leader_flag = hidden_sympathies_marshal
				}
				clr_unit_leader_flag = hidden_sympathies_marshal
			}
		}
	}

	# Recruit great leader
	option = {
		name = decisions.1.d
		trigger = {
			any_army_leader = {
				is_field_marshal = yes
				NOT = { average_stats < 4 }
				has_unit_leader_flag = hidden_sympathies_marshal
			}
		}
		add_command_power = -4
		add_political_power = -30
		random_army_leader = {
			limit = {
				is_field_marshal = yes
				NOT = { average_stats < 4 }
				has_unit_leader_flag = hidden_sympathies_marshal
			}
			add_unit_leader_trait = hidden_sympathies
		}
		hidden_effect = {
			every_army_leader = {
				limit = {
					has_unit_leader_flag = hidden_sympathies_marshal
				}
				clr_unit_leader_flag = hidden_sympathies_marshal
			}
		}
	}
}

# Which cores to return?
country_event = {
	id = decisions.3
	immediate = { log = "[GetDateText]: [Root.GetName]: event decisions.3 FROM = [From.GetName]" }
	title = decisions.3.t
	desc = decisions.3.d
	picture = GFX_report_event_generic_diplomacy2

	is_triggered_only = yes

	option = {
		name = decisions.3.a #return all land
		ai_chance = {
			base = 1
		}
		clr_country_flag = FX_returning_land
		custom_effect_tooltip = FX_will_return_all
		hidden_effect = {
			event_target:return_to = {
				country_event = decisions.4
			}
		}
	}
	option = {
		name = decisions.3.b #return all land but vital provinces
		trigger = {
			any_owned_state = {
				is_controlled_by = ROOT
				is_claim_or_core_of_ROOT = no
				is_important_state = yes
				NOT = { has_state_flag = FX_keeping_state@ROOT }
				OR = {
					AND = {
						ROOT = { tag = JAP }
						OR = {
							region = 194 #Malay Peninsula
							region = 91 #Arafura & Banda Seas
							region = 93 #Java & Flores Seas
							region = 158 #Sunda Islands
							region = 159 #Borneo
							region = 167 #New Guinea
							region = 192 #Sumatra
						}
					}
					ROOT = { is_ai = no }
				}
				OR = {
					is_core_of = event_target:return_to
					is_claimed_by = event_target:return_to
				}
			}
		}
		ai_chance = {
			base = 100
		}
		custom_effect_tooltip = FX_will_return_rest
		hidden_effect = {
			clr_country_flag = FX_returning_land
			every_owned_state = {
				limit = {
					is_claim_or_core_of_ROOT = no
					is_important_state = yes
					NOT = { has_state_flag = FX_keeping_state@ROOT }
					OR = {
						NOT = { has_variable = ambition_area_@ROOT }
						AND = {
							ROOT = { tag = JAP }
							OR = {
								region = 194 #Malay Peninsula
								region = 91 #Arafura & Banda Seas
								region = 93 #Java & Flores Seas
								region = 158 #Sunda Islands
								region = 159 #Borneo
								region = 167 #New Guinea
								region = 192 #Sumatra
							}
						}
						ROOT = { is_ai = no }
					}
					OR = {
						is_core_of = event_target:return_to
						is_claimed_by = event_target:return_to
					}
				}
				set_state_flag = FX_keeping_state@ROOT
			}
			if = {
				limit = {
					any_owned_state = {
						is_claim_or_core_of_ROOT = no
						is_important_state = no
						NOT = { has_state_flag = FX_keeping_state@ROOT }
						OR = {
							any_neighbor_state = { is_owned_by = event_target:return_to }
							is_coastal = yes
						}
						OR = {
							NOT = { has_variable = ambition_area_@ROOT }
							AND = {
								ROOT = { tag = JAP }
								OR = {
									region = 194 #Malay Peninsula
									region = 91 #Arafura & Banda Seas
									region = 93 #Java & Flores Seas
									region = 158 #Sunda Islands
									region = 159 #Borneo
									region = 167 #New Guinea
									region = 192 #Sumatra
								}
							}
							ROOT = { is_ai = no }
						}
						OR = {
							is_core_of = event_target:return_to
							is_claimed_by = event_target:return_to
						}
					}
				}
				event_target:return_to = {
					country_event = decisions.4
				}
			}
		}
	}
	option = {
		name = decisions.3.c #return cores only
		trigger = {
			is_ai = no
			any_owned_state = {
				is_claim_or_core_of_ROOT = no
				is_important_state = no
				NOT = { has_state_flag = FX_keeping_state@ROOT 	}
				is_core_of = event_target:return_to
			}
			any_owned_state = {
				is_claim_or_core_of_ROOT = no
				is_important_state = no
				NOT = { has_state_flag = FX_keeping_state@ROOT 	}
				NOT = { is_core_of = event_target:return_to }
				is_claimed_by = event_target:return_to
			}
		}
		custom_effect_tooltip = FX_will_return_cores
		hidden_effect = {
			clr_country_flag = FX_returning_land
			every_owned_state = {
				limit = {
					is_claim_or_core_of_ROOT = no
					NOT = { has_state_flag = FX_keeping_state@ROOT }
					NOT = { is_core_of = event_target:return_to }
					is_claimed_by = event_target:return_to
				}
				set_state_flag = FX_keeping_state@ROOT
			}
			event_target:return_to = {
				country_event = decisions.4
			}
		}
	}
	option = {
		name = decisions.3.e #keep it all you pig
		ai_chance = { base = 0 }
		clr_country_flag = FX_returning_land
		custom_effect_tooltip = FX_will_not_return
		hidden_effect = {
			every_owned_state = {
				limit = {
					OR = {
						is_core_of = event_target:return_to
						is_claimed_by = event_target:return_to
					}
					is_claim_or_core_of_ROOT = no
					NOT = { has_state_flag = FX_keeping_state@FROM }
				}
				set_state_flag = FX_keeping_state@ROOT
			}
		}
	}
}

# Cores/claims have been returned by an ally
country_event = {
	id = decisions.4
	immediate = { log = "[GetDateText]: [Root.GetName]: event decisions.4 FROM = [From.GetName]" }
	title = decisions.4.t
	desc = decisions.4.d
	picture = GFX_report_event_generic_diplomacy2

	is_triggered_only = yes

	option = {
		name = decisions.4.a
		add_opinion_modifier = {
			target = FROM
			modifier = FX_returned_land
		}
		set_temp_variable = { tag_to_release = ROOT }
		while_loop_effect = {
			limit = {
				FROM = {
					any_owned_state = {
						is_claim_or_core_of_ROOT = yes
						is_claim_or_core_of_FROM = no
						OR = {
							any_neighbor_state = { is_owned_by = ROOT }
							is_coastal = yes
						}
						OR = {
							NOT = { has_variable = ambition_area_@FROM }
							AND = {
								FROM = { tag = JAP }
								OR = {
									region = 194 #Malay Peninsula
									region = 91 #Arafura & Banda Seas
									region = 93 #Java & Flores Seas
									region = 158 #Sunda Islands
									region = 159 #Borneo
									region = 167 #New Guinea
									region = 192 #Sumatra
								}
							}
							FROM = { is_ai = no }
						}
						NOT = { has_state_flag = KR_keeping_state@FROM }
					}
				}
			}
			FROM = {
				every_owned_state = {
					limit = {
						is_claim_or_core_of_ROOT = yes
						is_claim_or_core_of_FROM = no
						OR = {
							any_neighbor_state = { is_owned_by = ROOT }
							is_coastal = yes
						}
						OR = {
							NOT = { has_variable = ambition_area_@FROM }
							AND = {
								FROM = { tag = JAP }
								OR = {
									region = 194 #Malay Peninsula
									region = 91 #Arafura & Banda Seas
									region = 93 #Java & Flores Seas
									region = 158 #Sunda Islands
									region = 159 #Borneo
									region = 167 #New Guinea
									region = 192 #Sumatra
								}
							}
							FROM = { is_ai = no }
						}
						NOT = { has_state_flag = FX_keeping_state@FROM }
					}
					transfer_state_without_overriding_occupation = yes
				}
			}
		}
	}
}
